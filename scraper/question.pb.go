// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: question.proto

package main

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionRequest) Reset() {
	*x = QuestionRequest{}
	mi := &file_question_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionRequest) ProtoMessage() {}

func (x *QuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_question_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionRequest.ProtoReflect.Descriptor instead.
func (*QuestionRequest) Descriptor() ([]byte, []int) {
	return file_question_proto_rawDescGZIP(), []int{0}
}

func (x *QuestionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QuestionRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type NewsItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interest      string                 `protobuf:"bytes,1,opt,name=interest,proto3" json:"interest,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Url           string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Distance      float32                `protobuf:"fixed32,5,opt,name=distance,proto3" json:"distance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewsItem) Reset() {
	*x = NewsItem{}
	mi := &file_question_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsItem) ProtoMessage() {}

func (x *NewsItem) ProtoReflect() protoreflect.Message {
	mi := &file_question_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsItem.ProtoReflect.Descriptor instead.
func (*NewsItem) Descriptor() ([]byte, []int) {
	return file_question_proto_rawDescGZIP(), []int{1}
}

func (x *NewsItem) GetInterest() string {
	if x != nil {
		return x.Interest
	}
	return ""
}

func (x *NewsItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewsItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NewsItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *NewsItem) GetDistance() float32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

type QuestionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Answer        []*NewsItem            `protobuf:"bytes,1,rep,name=answer,proto3" json:"answer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionResponse) Reset() {
	*x = QuestionResponse{}
	mi := &file_question_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionResponse) ProtoMessage() {}

func (x *QuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_question_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionResponse.ProtoReflect.Descriptor instead.
func (*QuestionResponse) Descriptor() ([]byte, []int) {
	return file_question_proto_rawDescGZIP(), []int{2}
}

func (x *QuestionResponse) GetAnswer() []*NewsItem {
	if x != nil {
		return x.Answer
	}
	return nil
}

var File_question_proto protoreflect.FileDescriptor

const file_question_proto_rawDesc = "" +
	"\n" +
	"\x0equestion.proto\x12\x04main\"9\n" +
	"\x0fQuestionRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\"\x84\x01\n" +
	"\bNewsItem\x12\x1a\n" +
	"\binterest\x18\x01 \x01(\tR\binterest\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x10\n" +
	"\x03url\x18\x04 \x01(\tR\x03url\x12\x1a\n" +
	"\bdistance\x18\x05 \x01(\x02R\bdistance\":\n" +
	"\x10QuestionResponse\x12&\n" +
	"\x06answer\x18\x01 \x03(\v2\x0e.main.NewsItemR\x06answer2G\n" +
	"\x0fQuestionService\x124\n" +
	"\x03Ask\x12\x15.main.QuestionRequest\x1a\x16.main.QuestionResponseB\tZ\a./;mainb\x06proto3"

var (
	file_question_proto_rawDescOnce sync.Once
	file_question_proto_rawDescData []byte
)

func file_question_proto_rawDescGZIP() []byte {
	file_question_proto_rawDescOnce.Do(func() {
		file_question_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_question_proto_rawDesc), len(file_question_proto_rawDesc)))
	})
	return file_question_proto_rawDescData
}

var file_question_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_question_proto_goTypes = []any{
	(*QuestionRequest)(nil),  // 0: main.QuestionRequest
	(*NewsItem)(nil),         // 1: main.NewsItem
	(*QuestionResponse)(nil), // 2: main.QuestionResponse
}
var file_question_proto_depIdxs = []int32{
	1, // 0: main.QuestionResponse.answer:type_name -> main.NewsItem
	0, // 1: main.QuestionService.Ask:input_type -> main.QuestionRequest
	2, // 2: main.QuestionService.Ask:output_type -> main.QuestionResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_question_proto_init() }
func file_question_proto_init() {
	if File_question_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_question_proto_rawDesc), len(file_question_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_question_proto_goTypes,
		DependencyIndexes: file_question_proto_depIdxs,
		MessageInfos:      file_question_proto_msgTypes,
	}.Build()
	File_question_proto = out.File
	file_question_proto_goTypes = nil
	file_question_proto_depIdxs = nil
}
